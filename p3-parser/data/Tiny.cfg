//
// WRITE A CORRECT GRAMMAR FOR THE TINY LANGUAGE IN THIS FILE.
//
// The grammar is described in data/tinyGrammar.pdf. Do not use dashes
// in your non-terminal names. I recommend you use mixed case naming for your
// non-terminals instead (e.g. stmtSeq).
//
// Do not put any string literals in this grammar (e.g. "="). Use only token
// names given in TinyLexer.tokens.
//
// This file contains an expression grammar that uses tokens described in
// TinyLexer.tokens.
//
// NOTE ONE ERROR in the pdf: the second production rule should read:
//    stmt-seq -> stmt-seq stmt | stmt

grammar Tiny;

goal: program;

program: stmt_seq;

stmt_seq: stmt_seq ';' stmt;

stmt: if_stmt
    | repeat_stmt
    | assign_stmt
    | read_stmt
    | write_stmt
    ;

if_stmt: IF exp THEN stmt_seq END
       | IF exp THEN stmt_seq ELSE stmt_seq END
       ;

repeat_stmt: REPEAT stmt_seq UNTIL exp;

assign_stmt: ID EQUAL exp;

read_stmt: READ ID;

write_stmt: WRITE exp;

exp: simple_exp (LT | EQUAL | LT simple_exp)?;

simple_exp: simple_exp (PLUS | MINUS) term
          | term
          ;

term: term (MULTIPLY | DIVIDE) factor
    | factor
    ;

factor: OPAREN exp CPAREN
      | NUM
      | ID
      ;